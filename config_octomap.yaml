################################################################################
#  配置文件 (示例)
#
# 1) 这里的 width, height, depth 均为 100，生成一个 100x100x100 的3D栅格
# 2) obstacle_count = 80
# 3) num_runs = 5，表示要随机生成5个环境；每个环境都对比多算法
# 4) use_octomap = true， coarse_resolution=4, fine_resolution=1 (可在 BFS/A*中使用)
#
# 5) compare_algorithms = true => 依次跑 (bfs, astar, opt, rrt, rrt_star, coarse_to_fine)
# 6) BFS/A* 的 neighbor_mode = "6"， A* 用欧几里得启发
# 7) PotentialField (opt_settings) 加了 jump_when_stuck，若卡住则随机跳
# 8) RRT/RRT* 调整了 step_size, max_iter, goal_threshold, 并加了 goal_bias
# 9) coarse_to_fine_settings: 在coarse层跑bfs, 在fine层跑astar
################################################################################

width: 100
height: 100
depth: 100

obstacle_count: 80
random_seed: null

num_runs: 5

start_random: true
goal_random: true
start_position: [0, 0, 0]
goal_position: [99, 99, 99]

use_octomap: true
coarse_resolution: 4
fine_resolution: 1

compare_algorithms: true
algorithm: "rrt_star"

visualization_mode: "voxel_scatter"
show_start_goal_in_vis: true

bfs_settings:
  neighbor_mode: "6"

astar_settings:
  neighbor_mode: "6"
  heuristic: "euclidean"

opt_settings:
  max_steps: 3000
  jump_when_stuck: true

rrt_settings:
  step_size: 6
  max_iter: 5000
  goal_threshold: 8.0
  goal_bias: 0.1

rrt_star_settings:
  step_size: 6
  max_iter: 5000
  goal_threshold: 8.0
  rewire_radius: 6.0
  goal_bias: 0.1

coarse_to_fine_settings:
  coarse_planner: "bfs"
  fine_planner:   "astar"
  neighbor_mode: "6"
